{"version":3,"sources":["components/layout/SignedInLinks.js","components/store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/createProject.js","components/store/actions/projectActions.js","App.js","serviceWorker.js","components/store/reducers/authReducer.js","components/store/reducers/projectReducer.js","components/store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","compose","firestoreConnect","state","console","log","firebase","profile","user","firestore","ordered","users","links","uid","Notifications","notifications","map","item","key","id","content","moment","time","toDate","fromNow","ProjectSummary","project","title","ProjectList","projects","Dashboard","this","Notification","Component","collection","orderBy","limit","ownProps","match","params","data","authorFirstName","authorLastName","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","initials","useFirebase","updateProfile","CreateProject","createProject","add","authorId","createdAt","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","profileFactory","userData","profileData","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","myUser","get","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7dd55845.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../store/actions/authActions';\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\"> New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">NN</NavLink></li>\r\n        </ul>\r\n        \r\n\r\n    );\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signOut:()=>dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","import { useFirebase,  } from 'react-redux-firebase'\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err)=>{\r\n             dispatch({type:'LOGIN_ERROR',err})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut =()=>{\r\n\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase =getFirebase()\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const  signUp=(newUser)=>{\r\n    return  (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase =getFirebase();\r\n        const firestore =getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            //we want user document ot have doc id the same as user id not random id if we were to use .add()\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n\r\n        }).then(()=>{\r\n            const firebase = useFirebase()\r\n            firebase.updateProfile(\r\n                {firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]});\r\n                console.log('worked')\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\"> Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n           \r\n        </ul>    \r\n\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const { auth ,user} = props;\r\n    console.log('helloWorld',user);\r\n    \r\n    // user && user.map(user => {user.firstName})\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n                {links}\r\n            \r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n        user:state.firestore.ordered.users\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['users']),\r\n    connect(mapStateToProps)\r\n)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-1\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                    \r\n\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-1 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by Dynamo</p>\r\n                <p className=\"grey-text\">9th Sptember, 2020,10am</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'project/'+ project.id}  key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notification.js';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect, } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    // state={id:''}\r\n\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        // this.setState({id:auth.uid})\r\n\r\n\r\n\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n\r\n    return {\r\n        projects: state.firestore.ordered.projects || state.project.projects,\r\n        auth: state.firebase.auth,\r\n        user: state.firestore.ordered.users,\r\n        notifications: state.firestore.ordered.notifications\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    firestoreConnect([\r\n        { collection: 'projects',orderBy:['createdAt','desc'] },\r\n        { collection: 'notifications', limit: 3,orderBy:['time','desc'] }\r\n    ]),\r\n\r\n\r\n    connect(mapStateToProps),\r\n\r\n)(Dashboard);","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    // const id = props.match.params.id\r\n    console.log(props);\r\n    const { project, auth } = props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-list\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card-title\">{project.title}</div>\r\n                        <p>{project.content} </p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>9th September 2020, 11am</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                Project Loading...\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state)\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null //this checks for the presence of the project id (firestore doc id) and adds it to the project\r\n    return {\r\n        project: project,\r\n        auth:state.firebase.auth\r\n    }\r\n\r\n}\r\n// firebaseConnect(props => [\r\n//     { collection : \"projects\", doc: props.match.params.id }\r\n// ])\r\n//this will fecth you the the specific project\r\nexport default compose(\r\n    firestoreConnect(() => ['projects']),\r\n    connect(mapStateToProps),\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { authError ,auth} = this.props;\r\n       \r\n        if(auth.uid) return <Redirect to=\"/\"/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../store/actions/authActions';\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n       \r\n    }\r\n    render() {\r\n        const { auth,authError } = this.props\r\n        if(auth.uid) return <Redirect to=\"/\"/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Signup</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { createProject } from '../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.createProject(this.state)\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if(!auth.uid) return <Redirect to=\"/signin\"/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:'Net',\r\n            authorLastName:'Ninja',\r\n            authorId:12345,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project})\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n        })\r\n       \r\n    }\r\n\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/createProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\"component={Dashboard}/>\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        // { id: 1, title: \"help me find peach\", content: 'blah,blah,blah' },\r\n        // { id: 2, title: \"collect all the stars\", content: 'blah,blah,blah' },\r\n        // { id: 3, title: \"egg hunt with yoshi\", content: 'blah,blah,blah' }\r\n    ]\r\n}\r\n\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAl-qEEMSDxI2emJT8eeZGM4s---Gcrdaw\",\r\n  authDomain: \"net-ninja-marioplan-ff5f6.firebaseapp.com\",\r\n  databaseURL: \"https://net-ninja-marioplan-ff5f6.firebaseio.com\",\r\n  projectId: \"net-ninja-marioplan-ff5f6\",\r\n  storageBucket: \"net-ninja-marioplan-ff5f6.appspot.com\",\r\n  messagingSenderId: \"423542371290\",\r\n  appId: \"1:423542371290:web:e1550d2dee54f111ce86e3\",\r\n  measurementId: \"G-DR3EM6C0T3\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n// firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './components/store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded,  } from \"react-redux-firebase\";\nimport fbConfig from './config/fbConfig';\nimport firebase from \"firebase/app\"\n\n\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  profileFactory: (userData, profileData, firebase) => { // how profiles are stored in database\n    const { user } = userData\n    return {\n      email: user.email\n    }\n  }\n}\n\n\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig),\n  ),\n);\n\n\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  // config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: 'presence',\n  sessions: 'sessions'\n};\n\n\nfunction AuthIsLoaded({ children }) {\n  \n  const auth = useSelector(state => state.firebase.auth);\n  \n  const { uid } = useSelector(state => state.firebase.auth);\n \n  \n \n  const myUser= firebase.firestore().collection(`users`)\n .doc(`${uid}`).get()\n .then(  doc=> {\n   const  theUser =  doc.data();\n   return theUser\n   //put some if statements to prevent null errors //uid ,doc \n  // console.log('hi', theUser)\n }).then(doc=>{\n \n  console.log('hi', doc)\n  //  myFirebase.updateProfile(doc);\n\n })\n//  .catch(err=>console.log(err))\n  \n\n  \n\n  console.log('hello', myUser)\n  // firebase.updateProfile({ role: 'admin' });\n\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}